{"ast":null,"code":"var _jsxFileName = \"/Users/frankyliu/Desktop/mod4/mathQuizGame/frontend/src/components/ViewScores.js\";\nimport React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nclass ViewScores extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      scores: [],\n      users: [],\n      search: []\n    };\n\n    this.keyPress = event => {\n      if (event.key === \"Enter\") {\n        let scores = this.state.scores;\n        scores = scores.filter(score => {\n          if (score.difficulty_id === 1) {\n            score.difficulty_id = \"Easy\";\n          } else if (score.difficulty_id === 2) {\n            score.difficulty_id = \"Medium\";\n          } else if (score.difficulty_id === 3) {\n            score.difficulty_id = \"Hard\";\n          }\n\n          return score.difficulty_id.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n        });\n        this.setState({\n          search: scores\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/scores\").then(resp => resp.json()).then(scores => {\n      this.setState({\n        scores: scores\n      });\n    });\n    fetch(\"http://localhost:3000/users\").then(resp => resp.json()).then(users => {\n      this.setState({\n        users: users\n      });\n    });\n  } // onChange = (event) => {\n  //     this.setState({\n  //         search: event.target.value\n  //     })\n  // }\n\n\n  // title, searchTerm\n  render() {\n    console.log(this.state.search);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      label: \"SEARCH BY DIFFICULTY\",\n      name: \"search\",\n      variant: \"outlined\" // onChange={this.onChange}\n      ,\n      onKeyPress: this.keyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Typography, {\n      color: \"textPrimary\",\n      variant: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"High Scores\"), this.state.search.map(search => {\n      if (search.difficulty_id === 1) {\n        search.difficulty_id = \"Easy\";\n      } else if (search.difficulty_id === 2) {\n        search.difficulty_id = \"Medium\";\n      } else if (search.difficulty_id === 3) {\n        search.difficulty_id = \"Hard\";\n      }\n\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Difficulty:\"), search.difficulty_id, React.createElement(Typography, {\n        variant: \"h5\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"search:\"), search.points, React.createElement(Typography, {\n        variant: \"h5\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Player:\"), this.state.users.map(user => {\n        if (user.id === search.user_id) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, user.username);\n        }\n      }));\n    })));\n  }\n\n}\n\nexport default ViewScores;","map":{"version":3,"sources":["/Users/frankyliu/Desktop/mod4/mathQuizGame/frontend/src/components/ViewScores.js"],"names":["React","Component","Grid","Typography","TextField","ViewScores","state","scores","users","search","keyPress","event","key","filter","score","difficulty_id","toLowerCase","target","value","setState","componentDidMount","fetch","then","resp","json","render","console","log","map","points","user","id","user_id","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\n\nclass ViewScores extends Component {\n\n    state={\n        scores: [],\n        users: [],\n        search: []\n    }\n\n    componentDidMount(){\n        fetch(`http://localhost:3000/scores`)\n        .then(resp => resp.json())\n        .then(scores => {\n            this.setState({scores: scores})\n        })\n\n        fetch(`http://localhost:3000/users`)\n        .then(resp => resp.json())\n        .then(users => {\n            this.setState({users: users})\n        })\n        \n    }\n\n    // onChange = (event) => {\n    //     this.setState({\n    //         search: event.target.value\n    //     })\n      \n    // }\n    keyPress = (event) => {\n        \n        if (event.key === \"Enter\"){\n            let scores = this.state.scores\n           scores = scores.filter((score) => {\n            if(score.difficulty_id === 1){\n                score.difficulty_id = \"Easy\"\n              } else if(score.difficulty_id === 2){\n                score.difficulty_id = \"Medium\"\n              } else if(score.difficulty_id === 3){\n                score.difficulty_id = \"Hard\"\n              }\n                return score.difficulty_id.toLowerCase().search(event.target.value.toLowerCase()) !== -1;\n            })\n            this.setState({search: scores})\n        }\n\n    }\n\n    // title, searchTerm\n\n    \n\n    render() {\n        console.log(this.state.search)\n        return (\n            <div>\n                <Grid>\n                <TextField \n                label=\"SEARCH BY DIFFICULTY\" \n                name=\"search\"\n                variant=\"outlined\"\n                // onChange={this.onChange}\n                onKeyPress= {this.keyPress}\n                />\n                <br></br>\n                <Typography color='textPrimary' variant=\"h2\">High Scores</Typography>\n                \n                    {this.state.search.map(search => {\n                    if(search.difficulty_id === 1){\n                        search.difficulty_id = \"Easy\"\n                      } else if(search.difficulty_id === 2){\n                        search.difficulty_id = \"Medium\"\n                      } else if(search.difficulty_id === 3){\n                        search.difficulty_id = \"Hard\"\n                      }\n                return <ul> \n                    <Typography variant=\"h5\" color=\"primary\">\n                    Difficulty:\n                    </Typography>\n                    {search.difficulty_id } \n                    <Typography variant=\"h5\" color=\"primary\">\n                    search:\n                    </Typography>\n                    { search.points }\n                    <Typography variant=\"h5\" color=\"primary\">\n                    Player:\n                    </Typography>\n                    {this.state.users.map(user => {\n                        if(user.id === search.user_id){\n                            return <div>{user.username}</div>\n                        } \n                    })}\n                    </ul>})}\n                </Grid>\n            </div>\n        );\n    }\n}\n\nexport default ViewScores;\n"]},"metadata":{},"sourceType":"module"}