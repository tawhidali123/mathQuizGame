{"ast":null,"code":"import _defineProperty from \"/Users/tawhid/Desktop/Coding Projects/mathquizgame/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/tawhid/Desktop/Coding Projects/mathquizgame/src/components/AdditionCard.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react'; // imported from material UI DOCS\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nDEFAULT_STATE = {\n  sum: 0,\n  userInput: 0,\n  a: 0,\n  b: 0\n};\nexport default class AdditionCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = _objectSpread({}, DEFAULT_STATE);\n\n    this.mathProblem = () => {\n      let random = () => {\n        return Math.round(Math.random() * 100);\n      };\n\n      let a = random();\n      let b = random();\n      let newSum = a + b;\n      this.setState({\n        sum: newSum,\n        a: a,\n        b: b\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        userInput: event.target.value\n      });\n      console.log(this.state.userInput);\n    };\n\n    this.keyPress = event => {\n      if (event.key === \"Enter\" && this.state.userInput == this.state.sum) {\n        this.mathProblem();\n      } else if (event.key === \"Enter\") {\n        console.log(typeof this.state.userInput);\n      }\n    };\n  }\n\n  componentDidMount() {\n    // console.log('hey')\n    this.mathProblem();\n  }\n\n  componentDidUpdate() {} // componentWillMount(){\n  //     this.setState({\n  //         sum: newSum\n  //         })\n  // }\n\n\n  render() {\n    return React.createElement(Container, {\n      className: \"ContainerclassName\",\n      maxWidth: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      key: \"1\",\n      xs: 12,\n      sm: 6,\n      md: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"cardclassName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: \"cardMediaclassname\",\n      image: \"https://source.unsplash.com/random\",\n      title: \"Image title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      className: \"cardContentclassName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.a, \" + \", this.state.b))), React.createElement(CardActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      onChange: this.handleChange,\n      onKeyPress: this.keyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/tawhid/Desktop/Coding Projects/mathquizgame/src/components/AdditionCard.js"],"names":["React","AppBar","Button","Card","CardActions","CardContent","CardMedia","CssBaseline","Grid","Toolbar","Typography","makeStyles","Container","Link","DEFAULT_STATE","sum","userInput","a","b","AdditionCard","Component","state","mathProblem","random","Math","round","newSum","setState","handleChange","event","target","value","console","log","keyPress","key","componentDidMount","componentDidUpdate","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\n// imported from material UI DOCS\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nDEFAULT_STATE= {\n    sum: 0,\n    userInput: 0,\n    a: 0,\n    b: 0\n}\n\n\nexport default class AdditionCard extends React.Component {\n\n   state ={...DEFAULT_STATE}\n\n    // newSum = () => {\n    //     \n    // }\n    \n\n    // getSum = (sum) => {\n    //     this.setState({\n    //         sum: sum\n    //     })\n    // }\n    mathProblem = () => {\n    let random = () => {   \n        return Math.round(Math.random()* 100) \n    }\n\n    let a = random()\n    let b = random()\n    let newSum = a + b\n\n    this.setState({\n        sum: newSum,\n        a: a,\n        b: b\n    })\n    }\n    componentDidMount(){\n        // console.log('hey')\n        this.mathProblem()\n    }\n\n    componentDidUpdate(){\n\n    }\n      \n    \n    \n    // componentWillMount(){\n    //     this.setState({\n    //         sum: newSum\n    //         })\n            \n        \n    // }\n    handleChange = (event) => {\n        this.setState({\n            userInput: event.target.value\n        })\n        console.log(this.state.userInput)\n    }\n\n    keyPress = (event) => {\n        if (event.key === \"Enter\" && this.state.userInput == this.state.sum){\n            this.mathProblem()\n            \n        }\n        else if(event.key === \"Enter\"){\n            console.log(typeof this.state.userInput)\n        }\n    }\n   \n    \n\n     render(){\n        \n        return (\n\n            \n            <Container className=\"ContainerclassName\" maxWidth=\"md\">\n            <Grid container spacing={4}>\n            \n                <Grid item key=\"1\" xs={12} sm={6} md={4}>\n                <Card className=\"cardclassName\">\n                    <CardMedia\n                    className=\"cardMediaclassname\"\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                    />\n                    <CardContent className=\"cardContentclassName\">\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    <h1>{this.state.a} + {this.state.b}</h1>\n                    </Typography>\n                    </CardContent>\n                    <CardActions>\n                        \n                        <input \n                            type=\"number\"\n                            onChange= {this.handleChange}\n                            onKeyPress= {this.keyPress}\n                            />\n                      \n                    </CardActions>\n                </Card>\n                </Grid>\n          \n            </Grid>\n            </Container>\n            \n    );\n}\n}\n"]},"metadata":{},"sourceType":"module"}