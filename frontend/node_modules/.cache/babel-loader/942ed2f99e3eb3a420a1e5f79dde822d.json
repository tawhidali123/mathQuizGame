{"ast":null,"code":"var _jsxFileName = \"/Users/frankyliu/Desktop/mod4/mathQuizGame/frontend/src/components/GameContainer.js\";\nimport React, { Component } from 'react';\nimport AdditionCard from './AdditionCard';\nimport MultiplicationCard from './MultiplicationCard';\nimport SubtractionCard from './SubtractionCard';\nimport Score from './Score';\nimport Timer from \"./Timer\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from '@material-ui/core';\nexport default class GameContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      points: 0,\n      time: null,\n      difficulty_id: null\n    };\n\n    this.correctAnswer = point => {\n      let newPoint = this.state.points;\n      let finalPoint = point + newPoint;\n      this.setState({\n        points: finalPoint\n      });\n    };\n\n    this.isTimerDone = () => {\n      fetch('http://localhost:3000/scores', {\n        method: 'POST',\n        body: JSON.stringify({\n          user_id: this.props.userObj.id,\n          points: this.state.points,\n          difficulty_id: 1\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(resp => resp.json());\n    };\n\n    this.handleDifficulty = event => {\n      //   event.preventDefault()\n      this.props.difficultyObj.map(difficulty => {\n        if (event.target.name === difficulty.level) {\n          console.log(difficulty.time);\n          this.setState({\n            time: difficulty.time,\n            difficulty_id: difficulty.id\n          });\n          console.log(this.state.time);\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"easy\",\n      onClick: this.handleDifficulty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Easy\"), React.createElement(\"button\", {\n      name: \"medium\",\n      onClick: this.handleDifficulty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Medium\"), React.createElement(\"button\", {\n      name: \"hard\",\n      onClick: this.handleDifficulty,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Hard\"), React.createElement(Timer, {\n      time: this.state.time,\n      done: this.isTimerDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 6,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(AdditionCard, {\n      correct: this.correctAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(MultiplicationCard, {\n      correct: this.correctAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(SubtractionCard, {\n      correct: this.correctAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(Score, {\n      total: this.state.points,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/frankyliu/Desktop/mod4/mathQuizGame/frontend/src/components/GameContainer.js"],"names":["React","Component","AdditionCard","MultiplicationCard","SubtractionCard","Score","Timer","Grid","Link","GameContainer","state","points","time","difficulty_id","correctAnswer","point","newPoint","finalPoint","setState","isTimerDone","fetch","method","body","JSON","stringify","user_id","props","userObj","id","headers","then","resp","json","handleDifficulty","event","difficultyObj","map","difficulty","target","name","level","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AdditionCard from './AdditionCard'\nimport MultiplicationCard from './MultiplicationCard'\nimport SubtractionCard from './SubtractionCard'\nimport Score from './Score'\nimport Timer from \"./Timer\"\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from '@material-ui/core';\n\n\nexport default class GameContainer extends Component {\n\n    state = {\n        points: 0,\n        time: null,\n        difficulty_id: null\n        \n        \n    }\n    \n\n    correctAnswer = (point) => {\n        let newPoint = this.state.points\n        let finalPoint = point + newPoint \n        this.setState({\n            points: finalPoint\n        })\n        \n        \n    }\n\n    isTimerDone = () => {\n        fetch('http://localhost:3000/scores', {\n            method: 'POST',\n            body: JSON.stringify({\n             user_id: this.props.userObj.id,\n             points: this.state.points,\n             difficulty_id: 1\n            }),\n\n            headers: {\n              'Content-Type':'application/json',\n              'Accept': 'application/json'\n            }\n        })\n        .then(resp => resp.json())\n    }\n\n    handleDifficulty = (event) => {\n    //   event.preventDefault()\n        this.props.difficultyObj.map(difficulty => {\n        if(event.target.name === difficulty.level){\n            console.log(difficulty.time)\n            this.setState({time: difficulty.time, difficulty_id: difficulty.id})\n            console.log(this.state.time)\n        }})}\n\n   \n\n    render() {\n        \n        return (\n            <Grid justify=\"center\">\n              \n                    \n                    \n                <button name=\"easy\" onClick={this.handleDifficulty}>\n                    Easy\n                </button>\n                <button name=\"medium\" onClick={this.handleDifficulty}>\n                    Medium\n                </button>\n                <button name=\"hard\" onClick={this.handleDifficulty}>\n                    Hard\n                </button>\n                    \n             \n            <Timer time={this.state.time} done={this.isTimerDone}/>\n            \n                \n            <Grid container spacing={6}  justify=\"center\" >\n                \n                \n                <Grid container item md={2}>\n                <AdditionCard  correct ={this.correctAnswer}/>\n                </Grid>\n                <Grid container item md={2}>\n                <MultiplicationCard correct ={this.correctAnswer}/>\n                </Grid>\n                <Grid container item md={2}>\n                <SubtractionCard correct = {this.correctAnswer}/>\n                </Grid>\n                \n            </Grid>\n            <Score total = {this.state.points}/>\n            </Grid>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}