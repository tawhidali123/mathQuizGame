{"ast":null,"code":"var _jsxFileName = \"/Users/frankyliu/Desktop/mod4/mathQuizGame/frontend/src/components/GameContainer.js\";\nimport React, { Component } from 'react';\nimport AdditionCard from './AdditionCard';\nimport MultiplicationCard from './MultiplicationCard';\nimport SubtractionCard from './SubtractionCard';\nimport Score from './Score';\nimport Timer from \"./Timer\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from '@material-ui/core';\nexport default class GameContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      points: 0,\n      time: 5\n    };\n\n    this.correctAnswer = point => {\n      let newPoint = this.state.points;\n      let finalPoint = point + newPoint;\n      this.setState({\n        points: finalPoint\n      });\n    };\n\n    this.isTimerDone = () => {\n      fetch('http://localhost:3000/scores', {\n        method: 'POST',\n        body: JSON.stringify({\n          user_id: this.props.userObj.id,\n          points: this.state.points,\n          difficulty_id: 1\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(resp => resp.json());\n    };\n\n    this.handleDifficulty = event => {\n      this.props.difficultyObj.map(difficulty => {\n        if (difficulty.level == \"easy\") {\n          this.setState({\n            time: difficulty.time\n          });\n        }\n\n        if (difficulty.level == \"medium\") {\n          this.setState({\n            time: difficulty.time\n          });\n        }\n\n        if (difficulty.level == \"hard\") {\n          this.setState({\n            time: difficulty.time\n          });\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.difficultyObj.map(difficulty => {\n      if (difficulty.level == \"easy\") {\n        this.setState({\n          time: difficulty.time\n        });\n      }\n\n      if (difficulty.level == \"medium\") {\n        this.setState({\n          time: difficulty.time\n        });\n      }\n\n      if (difficulty.level == \"hard\") {\n        this.setState({\n          time: difficulty.time\n        });\n      }\n\n      return React.createElement(\"button\", {\n        onClick: this.handleDifficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, difficulty.level);\n    }), React.createElement(Timer, {\n      time: this.state.time,\n      done: this.isTimerDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 6,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(AdditionCard, {\n      correct: this.correctAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(MultiplicationCard, {\n      correct: this.correctAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(SubtractionCard, {\n      correct: this.correctAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(Score, {\n      total: this.state.points,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/frankyliu/Desktop/mod4/mathQuizGame/frontend/src/components/GameContainer.js"],"names":["React","Component","AdditionCard","MultiplicationCard","SubtractionCard","Score","Timer","Grid","Link","GameContainer","state","points","time","correctAnswer","point","newPoint","finalPoint","setState","isTimerDone","fetch","method","body","JSON","stringify","user_id","props","userObj","id","difficulty_id","headers","then","resp","json","handleDifficulty","event","difficultyObj","map","difficulty","level","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AdditionCard from './AdditionCard'\nimport MultiplicationCard from './MultiplicationCard'\nimport SubtractionCard from './SubtractionCard'\nimport Score from './Score'\nimport Timer from \"./Timer\"\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from '@material-ui/core';\n\n\nexport default class GameContainer extends Component {\n\n    state = {\n        points: 0,\n        time: 5,\n        \n    }\n    \n\n    correctAnswer = (point) => {\n        let newPoint = this.state.points\n        let finalPoint = point + newPoint \n        this.setState({\n            points: finalPoint\n        })\n        \n        \n    }\n\n    isTimerDone = () => {\n        fetch('http://localhost:3000/scores', {\n            method: 'POST',\n            body: JSON.stringify({\n             user_id: this.props.userObj.id,\n             points: this.state.points,\n             difficulty_id: 1\n            }),\n\n            headers: {\n              'Content-Type':'application/json',\n              'Accept': 'application/json'\n            }\n        })\n        .then(resp => resp.json())\n    }\n\n    handleDifficulty = (event) => {\n      \n        this.props.difficultyObj.map(difficulty => {\n        if(difficulty.level == \"easy\"){\n            this.setState({time: difficulty.time})\n        }\n        if(difficulty.level == \"medium\"){\n            this.setState({time: difficulty.time})\n        }\n        if(difficulty.level == \"hard\"){\n            this.setState({time: difficulty.time})\n        }\n    })}\n\n   \n\n    render() {\n        \n        return (\n            <Grid justify=\"center\">\n                {this.props.difficultyObj.map(difficulty => {\n                      if(difficulty.level == \"easy\"){\n                        this.setState({time: difficulty.time})\n                    }\n                    if(difficulty.level == \"medium\"){\n                        this.setState({time: difficulty.time})\n                    }\n                    if(difficulty.level == \"hard\"){\n                        this.setState({time: difficulty.time})\n                    }\n                    \n                    return <button onClick={this.handleDifficulty}>{difficulty.level}</button>\n                    \n                })}\n            <Timer time={this.state.time} done={this.isTimerDone}/>\n            \n                \n            <Grid container spacing={6}  justify=\"center\" >\n                \n                \n                <Grid container item md={2}>\n                <AdditionCard  correct ={this.correctAnswer}/>\n                </Grid>\n                <Grid container item md={2}>\n                <MultiplicationCard correct ={this.correctAnswer}/>\n                </Grid>\n                <Grid container item md={2}>\n                <SubtractionCard correct = {this.correctAnswer}/>\n                </Grid>\n                \n            </Grid>\n            <Score total = {this.state.points}/>\n            </Grid>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}