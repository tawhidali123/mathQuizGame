{"ast":null,"code":"var _jsxFileName = \"/Users/frankyliu/Desktop/mod4/mathQuizGame/frontend/src/components/GameContainer.js\";\nimport React, { Component } from 'react';\nimport AdditionCard from './AdditionCard';\nimport MultiplicationCard from './MultiplicationCard';\nimport SubtractionCard from './SubtractionCard';\nimport Score from './Score';\nimport Timer from \"./Timer\";\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\nimport { Animated } from \"react-animated-css\";\nlet interval;\nexport default class GameContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      points: 0,\n      time: 60,\n      difficulty_id: null,\n      pointArr: []\n    };\n\n    this.correctAnswer = point => {\n      let newPoint = this.state.points;\n      let finalPoint = point + newPoint;\n      this.setState({\n        points: finalPoint,\n        pointArr: [],\n        pointsArr: [point]\n      });\n    };\n\n    this.isTimerDone = () => {\n      fetch('http://localhost:3000/scores', {\n        method: 'POST',\n        body: JSON.stringify({\n          user_id: this.props.userObj.id,\n          points: this.state.points,\n          difficulty_id: this.state.difficulty_id\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(resp => resp.json());\n    };\n\n    this.handleDifficulty = event => {\n      event.preventDefault(); //   console.log(this.props.difficultyObj)\n\n      this.props.difficultyObj.map(difficulty => {\n        if (event.target.name === difficulty.level) {\n          console.log(difficulty.time);\n          this.setState({\n            time: difficulty.time,\n            difficulty_id: difficulty.id\n          });\n        }\n      });\n    };\n\n    this.countDown = () => {\n      this.setState({\n        time: this.state.time - 1\n      });\n    };\n\n    this.startTimer = () => {\n      interval = setInterval(() => {\n        this.countDown();\n        console.log(this.state.time);\n      }, 1000);\n    };\n\n    this.handleReverse = () => {\n      this.props.getDifficultyObj();\n    };\n  }\n\n  render() {\n    console.log(this.props.difficultyObj);\n\n    if (this.state.time === 0) {\n      console.log(this.state.points);\n      this.isTimerDone();\n      clearInterval(interval);\n      return React.createElement(Redirect, {\n        to: \"/main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Grid, {\n      id: \"henrykim\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.props.difficultyObj.map(difficulty => {\n      return React.createElement(\"button\", {\n        name: difficulty.level,\n        onClick: this.handleDifficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, difficulty.level);\n    }), React.createElement(\"button\", {\n      onClick: this.handleReverse,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \" Reverse\"), React.createElement(Timer, {\n      time: this.state.time,\n      done: this.isTimerDone,\n      startTimer: this.startTimer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 6,\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(AdditionCard, {\n      correct: this.correctAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(MultiplicationCard, {\n      correct: this.correctAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      container: true,\n      item: true,\n      md: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(SubtractionCard, {\n      correct: this.correctAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))), this.state.pointArr.map(point => {\n      return React.createElement(Score, {\n        total: point,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/frankyliu/Desktop/mod4/mathQuizGame/frontend/src/components/GameContainer.js"],"names":["React","Component","AdditionCard","MultiplicationCard","SubtractionCard","Score","Timer","Grid","Link","Redirect","Animated","interval","GameContainer","state","points","time","difficulty_id","pointArr","correctAnswer","point","newPoint","finalPoint","setState","pointsArr","isTimerDone","fetch","method","body","JSON","stringify","user_id","props","userObj","id","headers","then","resp","json","handleDifficulty","event","preventDefault","difficultyObj","map","difficulty","target","name","level","console","log","countDown","startTimer","setInterval","handleReverse","getDifficultyObj","render","clearInterval"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport AdditionCard from './AdditionCard'\nimport MultiplicationCard from './MultiplicationCard'\nimport SubtractionCard from './SubtractionCard'\nimport Score from './Score'\nimport Timer from \"./Timer\"\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\nimport {Animated} from \"react-animated-css\"\n\nlet interval;\nexport default class GameContainer extends Component {\n\n    state = {\n        points: 0,\n        time: 60,\n        difficulty_id: null,\n        pointArr: []\n        \n    }\n    \n\n    correctAnswer = (point) => {\n        let newPoint = this.state.points\n        let finalPoint = point + newPoint \n        this.setState({\n            points: finalPoint,\n            pointArr: [],\n            pointsArr: [point]\n        })\n        \n        \n    }\n\n    isTimerDone = () => {\n        fetch('http://localhost:3000/scores', {\n            method: 'POST',\n            body: JSON.stringify({\n             user_id: this.props.userObj.id,\n             points: this.state.points,\n             difficulty_id: this.state.difficulty_id\n            }),\n\n            headers: {\n              'Content-Type':'application/json',\n              'Accept': 'application/json'\n            }\n        })\n        .then(resp => resp.json())\n    }\n\n    handleDifficulty = (event) => {\n      event.preventDefault()\n    //   console.log(this.props.difficultyObj)\n        this.props.difficultyObj.map(difficulty => {\n        if(event.target.name === difficulty.level){\n            console.log(difficulty.time)\n            this.setState({time: difficulty.time, difficulty_id: difficulty.id})\n         \n        }})\n    }\n\n\n    \n        countDown = () => {\n            this.setState({time: this.state.time-1})\n        }\n\n        startTimer = () => {\n            interval =  setInterval(() => {\n                this.countDown();\n                console.log(this.state.time);\n              }, 1000);\n            }\n\n\n\n        handleReverse = () => {\n           this.props.getDifficultyObj()\n            \n        }\n\n\n\n    render() {\n        console.log(this.props.difficultyObj)\n\n            if(this.state.time === 0)  {\n                console.log(this.state.points)\n            this.isTimerDone()\n            clearInterval(interval)\n            return <Redirect to='/main' />\n\n            \n        } \n\n        return (\n            <Grid id=\"henrykim\" justify=\"center\">\n              \n               {this.props.difficultyObj.map(difficulty => {\n                   return <button name={difficulty.level} onClick={this.handleDifficulty}>{difficulty.level}</button>\n               })}     \n\n                <button onClick={this.handleReverse}> Reverse</button>\n                \n                \n                \n                \n                \n                {/* <button name=\"easy\" onClick={this.handleDifficulty}>\n                    Easy\n                </button>\n                <button name=\"medium\" onClick={this.handleDifficulty}>\n                    Medium\n                </button>\n                <button name=\"hard\" onClick={this.handleDifficulty}>\n                    Hard\n                </button>\n                     */}\n             \n            <Timer time={this.state.time} done={this.isTimerDone} startTimer={this.startTimer}/>\n            \n                \n            <Grid container spacing={6}  justify=\"center\" >\n                \n                \n                <Grid container item md={2}>\n                <AdditionCard  correct ={this.correctAnswer}/>\n                </Grid>\n                <Grid container item md={2}>\n                <MultiplicationCard correct ={this.correctAnswer}/>\n                </Grid>\n                <Grid container item md={2}>\n                <SubtractionCard correct = {this.correctAnswer}/>\n                </Grid>\n                \n            </Grid>\n            {/* <Animated animationIn=\"bounceInLeft\"> */}\n                {/* <Score total = {this.state.points}/> */}\n            {/* </Animated> */}\n            {\n                this.state.pointArr.map(point => {\n                    return <Score total={point}/>\n                })\n            }\n            </Grid>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}